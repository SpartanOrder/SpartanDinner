<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spartan.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.spartan.model.User">
        <id column="user_ID" property="userId" jdbcType="INTEGER"/>
        <result column="user_Name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_state" property="userState" jdbcType="TINYINT"/>
        <result column="user_Password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="last_LoginIp" property="lastLoginip" jdbcType="VARCHAR"/>
        <result column="del_Flag" property="delFlag" jdbcType="TINYINT"/>
        <result column="last_SubTime" property="lastSubtime" jdbcType="TIMESTAMP"/>
        <association property="employeeInfo" resultMap="com.spartan.dao.EmployeeInfoMapper.SimpleResultMap">
        </association>
        <association property="role" column="role_Id" javaType="com.spartan.model.Role" resultMap="com.spartan.dao.RoleMapper.SimpleResultMap">
        </association>
        <association property="user" column="subBy" javaType="com.spartan.model.User" resultMap="com.spartan.dao.UserMapper.SimpleResultMap">
        </association>
    </resultMap>
    <resultMap id="SimpleResultMap" type="com.spartan.model.User">
        <id column="user_ID" property="userId" jdbcType="INTEGER"/>
        <result column="user_Name" property="userName" jdbcType="VARCHAR"/>
        <association property="employeeInfo" resultMap="com.spartan.dao.EmployeeInfoMapper.SimpleResultMap">
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Column_SubBy_Employee">
        s.user_ID,s.user_Name,t.employee_Id,t.employee_Name,t.user_Id
    </sql>
    <sql id="LEFTJOIN_SubBy_Employee">
        LEFT JOIN t_user s ON m.subby=s.user_id
        LEFT JOIN t_employeeinfo t ON s.user_ID=t.user_ID
    </sql>
    <sql id="Self_SubBy_Employee">
        t.employee_Id,t.employee_Name,t.user_Id
    </sql>
    <sql id="Self_LEFTJOIN_SubBy_Employee">
        LEFT JOIN t_employeeinfo t ON m.user_ID=t.user_ID
    </sql>
    <sql id="Base_Column_List">
        user_ID, user_Name, role_ID, user_state, user_Password, salt, last_LoginIp
   </sql>
    <sql id="mBase_Column_List">
        m.user_ID, m.user_Name, m.role_ID, m.user_state, m.user_Password, m.salt, m.last_LoginIp
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.spartan.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="mBase_Column_List"/>,
        <include refid="com.spartan.dao.common.Column_Master_LastSubtime"/>,
        <include refid="com.spartan.dao.common.Column_Master_CUD"/>,
        <include refid="Self_SubBy_Employee"/>,
        f.role_Id,f.role_Name,f.power_Ids
        from t_user m
        <include refid="Self_LEFTJOIN_SubBy_Employee"/>
        LEFT JOIN t_Role f ON m.role_Id=f.role_Id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="mBase_Column_List"/>,
        <include refid="com.spartan.dao.common.Column_Master_LastSubtime"/>,
        <include refid="com.spartan.dao.common.Column_Master_CUD"/>,
        <include refid="Self_SubBy_Employee"/>,
        f.role_Id,f.role_Name,f.power_Ids
        from t_user m
        <include refid="Self_LEFTJOIN_SubBy_Employee"/>
        LEFT JOIN t_Role f ON m.role_Id=f.role_Id
        where m.user_ID = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete m from t_user m
    where user_ID = #{userId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.spartan.model.UserExample">
        delete m from t_user m
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.spartan.model.User">
    insert into t_user (user_ID, user_Name, role_ID, 
      user_state, user_Password, salt, 
      last_LoginIp, del_Flag,
      subby)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{role.roleId,jdbcType=INTEGER},
      #{userState,jdbcType=TINYINT}, #{userPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{lastLoginip,jdbcType=VARCHAR}, #{delFlag,jdbcType=TINYINT},
      #{user.userId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.spartan.model.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_ID,
            </if>
            <if test="userName != null">
                user_Name,
            </if>
            <if test="role != null">
                role_ID,
            </if>
            <if test="userState != null">
                user_state,
            </if>
            <if test="userPassword != null">
                user_Password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="lastLoginip != null">
                last_LoginIp,
            </if>
            <if test="delFlag != null">
                del_Flag,
            </if>
            <if test="lastSubtime != null">
                last_SubTime,
            </if>
            <if test="user != null">
                subby,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role.roleId,jdbcType=INTEGER},
            </if>
            <if test="userState != null">
                #{userState,jdbcType=TINYINT},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginip != null">
                #{lastLoginip,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=TINYINT},
            </if>
            <if test="lastSubtime != null">
                #{lastSubtime,jdbcType=TIMESTAMP},
            </if>
            <if test="user != null">
                #{user.userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.spartan.model.UserExample" resultType="java.lang.Integer">
        select count(*) from t_user m
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_user m
        <set>
            <if test="record.userId != null">
                user_ID = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_Name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.role != null">
                role_ID = #{record.role.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.userState != null">
                user_state = #{record.userState,jdbcType=TINYINT},
            </if>
            <if test="record.userPassword != null">
                user_Password = #{record.userPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.salt != null">
                salt = #{record.salt,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginip != null">
                last_LoginIp = #{record.lastLoginip,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_Flag = #{record.delFlag,jdbcType=TINYINT},
            </if>
            <if test="record.lastSubtime != null">
                last_SubTime = #{record.lastSubtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.user != null">
                subby = #{record.user.userId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_user m
        set user_ID = #{record.userId,jdbcType=INTEGER},
        user_Name = #{record.userName,jdbcType=VARCHAR},
        role_ID = #{record.role.roleId,jdbcType=INTEGER},
        user_state = #{record.userState,jdbcType=TINYINT},
        user_Password = #{record.userPassword,jdbcType=VARCHAR},
        salt = #{record.salt,jdbcType=VARCHAR},
        last_LoginIp = #{record.lastLoginip,jdbcType=VARCHAR},
        del_Flag = #{record.delFlag,jdbcType=TINYINT},
        subby = #{record.user.userId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.spartan.model.User">
        update t_user m
        <set>
            <if test="userName != null">
                user_Name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role_ID = #{role.roleId,jdbcType=INTEGER},
            </if>
            <if test="userState != null">
                user_state = #{userState,jdbcType=TINYINT},
            </if>
            <if test="userPassword != null">
                user_Password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginip != null">
                last_LoginIp = #{lastLoginip,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_Flag = #{delFlag,jdbcType=TINYINT},
            </if>
            <if test="lastSubtime != null">
                last_SubTime = #{lastSubtime,jdbcType=TIMESTAMP},
            </if>
            <if test="user != null">
                subby = #{user.userId,jdbcType=INTEGER},
            </if>
        </set>
        where user_ID = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.spartan.model.User">
    update t_user m
    set user_Name = #{userName,jdbcType=VARCHAR},
      role_ID = #{role.roleId,jdbcType=INTEGER},
      user_state = #{userState,jdbcType=TINYINT},
      user_Password = #{userPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      last_LoginIp = #{lastLoginip,jdbcType=VARCHAR},
      del_Flag = #{delFlag,jdbcType=TINYINT},
      subby = #{user.userId,jdbcType=INTEGER}
    where user_ID = #{userId,jdbcType=INTEGER}
  </update>
</mapper>